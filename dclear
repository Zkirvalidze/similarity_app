[1mdiff --git a/src/components/Code.tsx b/src/components/Code.tsx[m
[1mdeleted file mode 100644[m
[1mindex 621a19e..0000000[m
[1m--- a/src/components/Code.tsx[m
[1m+++ /dev/null[m
[36m@@ -1,81 +0,0 @@[m
[31m-'use client';[m
[31m-[m
[31m-import { useTheme } from 'next-themes';[m
[31m-import Highlight, { defaultProps, type Language } from 'prism-react-renderer';[m
[31m-import darkTheme from 'prism-react-renderer/themes/nightOwl';[m
[31m-import lightTheme from 'prism-react-renderer/themes/nightOwlLight';[m
[31m-import { FC, useEffect, useState } from 'react';[m
[31m-[m
[31m-interface CodeProps {[m
[31m-  code: string;[m
[31m-  show: boolean;[m
[31m-  language: Language;[m
[31m-  animationDelay?: number;[m
[31m-  animated?: boolean;[m
[31m-}[m
[31m-[m
[31m-const Code: FC<CodeProps> = ({[m
[31m-  code,[m
[31m-  show,[m
[31m-  animated,[m
[31m-  animationDelay,[m
[31m-  language,[m
[31m-}) => {[m
[31m-  const { theme: applicationTheme } = useTheme();[m
[31m-  const [text, setText] = useState<string>(animated ? '' : code);[m
[31m-[m
[31m-  useEffect(() => {[m
[31m-    if (show && animated) {[m
[31m-      let i = 0;[m
[31m-      setTimeout(() => {[m
[31m-        const intervalId = setInterval(() => {[m
[31m-          setText(code.slice(0, i));[m
[31m-          i++;[m
[31m-          if (i > code.length) {[m
[31m-            clearInterval(intervalId);[m
[31m-          }[m
[31m-        }, 15);[m
[31m-[m
[31m-        return () => clearInterval(intervalId);[m
[31m-      }, animationDelay || 150);[m
[31m-    }[m
[31m-  }, [code, show, animated, animationDelay]);[m
[31m-[m
[31m-  // number of lines[m
[31m-  const lines = text.split(/\r\n|\r|\n/).length;[m
[31m-[m
[31m-  const theme = applicationTheme === 'light' ? lightTheme : darkTheme;[m
[31m-[m
[31m-  return ([m
[31m-    <Highlight {...defaultProps} code={text} language={language} theme={theme}>[m
[31m-      {({ className, tokens, getLineProps, getTokenProps }) => ([m
[31m-        <pre[m
[31m-          className={[m
[31m-            className +[m
[31m-            'transition-all w-fit bg-transparent duration-100 py-0 no-scrollbar'[m
[31m-          }[m
[31m-          style={{[m
[31m-            maxHeight: show ? lines * 24 : 0,[m
[31m-            opacity: show ? 1 : 0,[m
[31m-          }}[m
[31m-        >[m
[31m-          {tokens.map((line, i) => {[m
[31m-            // eslint-disable-next-line no-unused-vars[m
[31m-            const { key, ...rest } = getLineProps({ line, key: i });[m
[31m-            return ([m
[31m-              <div key={`line-${i}`} style={{ position: 'relative' }} {...rest}>[m
[31m-                {line.map((token, index) => {[m
[31m-                  // eslint-disable-next-line no-unused-vars[m
[31m-                  const { key, ...props } = getTokenProps({ token, i });[m
[31m-                  return <span key={index} {...props} />;[m
[31m-                })}[m
[31m-              </div>[m
[31m-            );[m
[31m-          })}[m
[31m-        </pre>[m
[31m-      )}[m
[31m-    </Highlight>[m
[31m-  );[m
[31m-};[m
[31m-[m
[31m-export default Code;[m
[1mdiff --git a/src/components/DocumentationTabs.tsx b/src/components/DocumentationTabs.tsx[m
[1mindex 0c7ccae..ca59ae9 100644[m
[1m--- a/src/components/DocumentationTabs.tsx[m
[1m+++ b/src/components/DocumentationTabs.tsx[m
[36m@@ -4,7 +4,7 @@[m
 import { nodejs, python } from '@/helpers/documentation-code';[m
 import { FC } from 'react';[m
 import SimpleBar from 'simplebar-react';[m
[31m-import Code from './Code';[m
[32m+[m[32mimport Code from './ui/Code';[m
 import { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/Tabs';[m
 import 'simplebar-react/dist/simplebar.min.css'[m
 const DocumentationTabs: FC = () => {[m
[1mdiff --git a/src/components/Navbar.tsx b/src/components/Navbar.tsx[m
[1mindex 25aeece..f744265 100644[m
[1m--- a/src/components/Navbar.tsx[m
[1m+++ b/src/components/Navbar.tsx[m
[36m@@ -1,10 +1,10 @@[m
 import { getServerSession } from 'next-auth';[m
 import Link from 'next/link';[m
[31m-import SignInButton from './SignInButton';[m
[31m-import SignOutButton from './SignOutButton';[m
[32m+[m[32mimport SignInButton from './ui/SignInButton';[m
[32m+[m[32mimport SignOutButton from './ui/SignOutButton';[m
 import ThemeToggle from './ThemeToggle';[m
 [m
[31m-import { buttonVariants } from './ui/Button';[m
[32m+[m[32mimport { Button, buttonVariants } from './ui/Button';[m
 [m
 const Navbar = async () => {[m
   const session = await getServerSession();[m
[36m@@ -43,6 +43,7 @@[m [mconst Navbar = async () => {[m
           )}[m
         </div>[m
       </div>[m
[32m+[m[41m     [m
     </div>[m
   );[m
 };[m
[1mdiff --git a/src/components/SignInButton.tsx b/src/components/SignInButton.tsx[m
[1mdeleted file mode 100644[m
[1mindex 50e7997..0000000[m
[1m--- a/src/components/SignInButton.tsx[m
[1m+++ /dev/null[m
[36m@@ -1,30 +0,0 @@[m
[31m-'use client';[m
[31m-[m
[31m-import { signIn } from 'next-auth/react';[m
[31m-import { FC, useState } from 'react';[m
[31m-import { Button } from './ui/Button';[m
[31m-[m
[31m-import { toast } from './ui/Toast';[m
[31m-[m
[31m-interface SignInButtonProps {}[m
[31m-[m
[31m-const SignInButton: FC<SignInButtonProps> = ({}) => {[m
[31m-  const [isLoading, setIsLoading] = useState<boolean>(false);[m
[31m-[m
[31m-  const signInWithGoogle =async () => {[m
[31m-    setIsLoading(true)[m
[31m-    try{[m
[31m-        await signIn('google')[m
[31m-    }catch(error){[m
[31m-        toast({[m
[31m-            title: 'Error signing in',[m
[31m-            message: 'Please try again later',[m
[31m-            type: 'error'[m
[31m-        })[m
[31m-    }[m
[31m-    [m
[31m-  }[m
[31m-  return <Button onClick={signInWithGoogle} isLoading={isLoading}>Sign In</Button>;[m
[31m-};[m
[31m-[m
[31m-export default SignInButton;[m
[1mdiff --git a/src/components/SignOutButton.tsx b/src/components/SignOutButton.tsx[m
[1mdeleted file mode 100644[m
[1mindex 5155995..0000000[m
[1m--- a/src/components/SignOutButton.tsx[m
[1m+++ /dev/null[m
[36m@@ -1,29 +0,0 @@[m
[31m-'use client';[m
[31m-[m
[31m-import {  signOut } from 'next-auth/react';[m
[31m-import { FC, useState } from 'react';[m
[31m-import Button from './ui/Button';[m
[31m-import { toast } from './ui/Toast';[m
[31m-[m
[31m-interface SignOutButtonProps {}[m
[31m-[m
[31m-const SignOutButton: FC<SignOutButtonProps> = ({}) => {[m
[31m-  const [isLoading, setIsLoading] = useState<boolean>(false);[m
[31m-[m
[31m-  const signUserOut =async () => {[m
[31m-    setIsLoading(true)[m
[31m-    try{[m
[31m-        await signOut()[m
[31m-    }catch(error){[m
[31m-        toast({[m
[31m-            title: 'Error signing out',[m
[31m-            message: 'Please try again later',[m
[31m-            type: 'error'[m
[31m-        })[m
[31m-    }[m
[31m-    [m
[31m-  }[m
[31m-  return <Button onClick={signUserOut} isLoading={isLoading}>Sign Out</Button>;[m
[31m-};[m
[31m-[m
[31m-export default SignOutButton;[m
[1mdiff --git a/src/components/ThemeToggle.tsx b/src/components/ThemeToggle.tsx[m
[1mindex 051ff6f..2c8c934 100644[m
[1m--- a/src/components/ThemeToggle.tsx[m
[1m+++ b/src/components/ThemeToggle.tsx[m
[36m@@ -1,40 +1,40 @@[m
 'use client';[m
[32m+[m
[32m+[m[32mimport { useTheme } from 'next-themes';[m
[32m+[m
[32m+[m[32mimport Icons from '@/components/Icons';[m
[32m+[m[32mimport { Button } from '@/components/ui/Button';[m
 import {[m
   DropdownMenu,[m
   DropdownMenuContent,[m
[31m-  DropdownMenuItem,[m
   DropdownMenuTrigger,[m
[31m-} from '@radix-ui/react-dropdown-menu';[m
[31m-import { Laptop, Moon, Sun } from 'lucide-react';[m
[31m-import { useTheme } from 'next-themes';[m
[31m-import { FC } from 'react';[m
[31m-import { Button } from './ui/Button';[m
[31m-[m
[32m+[m[32m  DropdownMenuItem,[m
[32m+[m[32m} from '@/components/ui/DropdownMenu';[m
 [m
 interface ThemeToggleProps {}[m
 [m
[31m-const ThemeToggle: FC<ThemeToggleProps> = () => {[m
[31m-  const {setTheme} = useTheme();[m
[32m+[m[32mconst ThemeToggle: React.FC<ThemeToggleProps> = () => {[m
[32m+[m[32m  const { setTheme } = useTheme();[m
   return ([m
     <DropdownMenu>[m
       <DropdownMenuTrigger asChild>[m
         <Button variant="ghost" size="sm">[m
[31m-          <Sun className="rotate-0 scale-100 transition-all hover:text-slate-900 dark:-rotate-90 dark:scale-0 dark:text-slate-400 dark:hover:text-slate-100" />[m
[31m-          <Moon className="absolute rotate-90 scale-0 transition-all hover:text-slate-900 dark:rotate-0 dark:scale-100 dark:text-slate-400 dark:hover:text-slate-100" />[m
[32m+[m[32m          <Icons.Sun className="rotate-0 scale-100 transition-all hover:text-slate-900 dark:-rotate-90 dark:scale-0 dark:text-slate-400 dark:hover:text-slate-100" />[m
[32m+[m[32m          <Icons.Moon className="absolute rotate-90 scale-0 transition-all hover:text-slate-900 dark:rotate-0 dark:scale-100 dark:text-slate-400 dark:hover:text-slate-100" />[m
           <span className="sr-only">Toggle theme</span>[m
         </Button>[m
       </DropdownMenuTrigger>[m
       <DropdownMenuContent align="end" forceMount>[m
         <DropdownMenuItem onClick={() => setTheme('light')}>[m
[31m-          <Sun className="mr-2 h-4 w-4" />[m
[32m+[m[32m          <Icons.Sun className="mr-2 h-4 w-4" />[m
           <span>Light</span>[m
         </DropdownMenuItem>[m
         <DropdownMenuItem onClick={() => setTheme('dark')}>[m
[31m-          <Moon className="mr-2 h-4 w-4" />[m
[32m+[m[32m          <Icons.Moon className="mr-2 h-4 w-4" />[m
           <span>Dark</span>[m
         </DropdownMenuItem>[m
         <DropdownMenuItem onClick={() => setTheme('system')}>[m
[31m-          <Laptop className="mr-2 h-4 w-4" />[m
[32m+[m[32m          <Icons.Laptop className="mr-2 h-4 w-4" />[m
           <span>System</span>[m
         </DropdownMenuItem>[m
       </DropdownMenuContent>[m
[1mdiff --git a/src/components/ui/DropDownMenu.tsx b/src/components/ui/DropDownMenu.tsx[m
[1mdeleted file mode 100644[m
[1mindex a50f0d2..0000000[m
[1m--- a/src/components/ui/DropDownMenu.tsx[m
[1m+++ /dev/null[m
[36m@@ -1,203 +0,0 @@[m
[31m-'use client';[m
[31m-[m
[31m-import * as React from 'react';[m
[31m-import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';[m
[31m-import { Check, ChevronRight, Circle } from 'lucide-react';[m
[31m-[m
[31m-import { cn } from '@/lib/utils';[m
[31m-[m
[31m-const DropdownMenu = DropdownMenuPrimitive.Root;[m
[31m-[m
[31m-const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;[m
[31m-[m
[31m-const DropdownMenuGroup = DropdownMenuPrimitive.Group;[m
[31m-[m
[31m-const DropdownMenuPortal = DropdownMenuPrimitive.Portal;[m
[31m-[m
[31m-const DropdownMenuSub = DropdownMenuPrimitive.Sub;[m
[31m-[m
[31m-const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;[m
[31m-[m
[31m-const DropdownMenuSubTrigger = React.forwardRef<[m
[31m-  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,[m
[31m-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {[m
[31m-    inset?: boolean;[m
[31m-  }[m
[31m->(({ className, inset, children, ...props }, ref) => ([m
[31m-  <DropdownMenuPrimitive.SubTrigger[m
[31m-    ref={ref}[m
[31m-    className={cn([m
[31m-      'flex cursor-default select-none items-center rounded-sm py-1.5 px-2 text-sm font-medium outline-none focus:bg-slate-100 data-[state=open]:bg-slate-100 dark:focus:bg-slate-700 dark:data-[state=open]:bg-slate-700',[m
[31m-      inset && 'pl-8',[m
[31m-      className[m
[31m-    )}[m
[31m-    {...props}[m
[31m-  >[m
[31m-    {children}[m
[31m-    <ChevronRight className="ml-auto h-4 w-4" />[m
[31m-  </DropdownMenuPrimitive.SubTrigger>[m
[31m-));[m
[31m-DropdownMenuSubTrigger.displayName =[m
[31m-  DropdownMenuPrimitive.SubTrigger.displayName;[m
[31m-[m
[31m-const DropdownMenuSubContent = React.forwardRef<[m
[31m-  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,[m
[31m-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>[m
[31m->(({ className, ...props }, ref) => ([m
[31m-  <DropdownMenuPrimitive.SubContent[m
[31m-    ref={ref}[m
[31m-    className={cn([m
[31m-      'z-50 min-w-[8rem] overflow-hidden rounded-md border border-slate-100 bg-white p-1 text-slate-700 shadow-md animate-in slide-in-from-left-1 dark:border-slate-800 dark:bg-slate-800 dark:text-slate-400',[m
[31m-      className[m
[31m-    )}[m
[31m-    {...props}[m
[31m-  />[m
[31m-));[m
[31m-DropdownMenuSubContent.displayName =[m
[31m-  DropdownMenuPrimitive.SubContent.displayName;[m
[31m-[m
[31m-const DropdownMenuContent = React.forwardRef<[m
[31m-  React.ElementRef<typeof DropdownMenuPrimitive.Content>,[m
[31m-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>[m
[31m->(({ className, sideOffset = 4, ...props }, ref) => ([m
[31m-  <DropdownMenuPrimitive.Portal>[m
[31m-    <DropdownMenuPrimitive.Content[m
[31m-      ref={ref}[m
[31m-      sideOffset={sideOffset}[m
[31m-      className={cn([m
[31m-        'z-50 min-w-[8rem] overflow-hidden rounded-md border border-slate-100 bg-white p-1 text-slate-700 shadow-md animate-in data-[side=right]:slide-in-from-left-2 data-[side=left]:slide-in-from-right-2 data-[side=bottom]:slide-in-from-top-2 data-[side=top]:slide-in-from-bottom-2 dark:border-slate-800 dark:bg-slate-800 dark:text-slate-400',[m
[31m-        className[m
[31m-      )}[m
[31m-      {...props}[m
[31m-    />[m
[31m-  </DropdownMenuPrimitive.Portal>[m
[31m-));[m
[31m-DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;[m
[31m-[m
[31m-const DropdownMenuItem = React.forwardRef<[m
[31m-  React.ElementRef<typeof DropdownMenuPrimitive.Item>,[m
[31m-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {[m
[31m-    inset?: boolean;[m
[31m-  }[m
[31m->(({ className, inset, ...props }, ref) => ([m
[31m-  <DropdownMenuPrimitive.Item[m
[31m-    ref={ref}[m
[31m-    className={cn([m
[31m-      'relative flex cursor-default text-base md:text-sm select-none items-center rounded-sm py-1.5 px-2 font-medium outline-none focus:bg-slate-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-slate-700',[m
[31m-      inset && 'pl-8',[m
[31m-      className[m
[31m-    )}[m
[31m-    {...props}[m
[31m-  />[m
[31m-));[m
[31m-DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;[m
[31m-[m
[31m-const DropdownMenuCheckboxItem = React.forwardRef<[m
[31m-  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,[m
[31m-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>[m
[31m->(({ className, children, checked, ...props }, ref) => ([m
[31m-  <DropdownMenuPrimitive.CheckboxItem[m
[31m-    ref={ref}[m
[31m-    className={cn([m
[31m-      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm font-medium outline-none focus:bg-slate-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-slate-700',[m
[31m-      className[m
[31m-    )}[m
[31m-    checked={checked}[m
[31m-    {...props}[m
[31m-  >[m
[31m-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">[m
[31m-      <DropdownMenuPrimitive.ItemIndicator>[m
[31m-        <Check className="h-4 w-4" />[m
[31m-      </DropdownMenuPrimitive.ItemIndicator>[m
[31m-    </span>[m
[31m-    {children}[m
[31m-  </DropdownMenuPrimitive.CheckboxItem>[m
[31m-));[m
[31m-DropdownMenuCheckboxItem.displayName =[m
[31m-  DropdownMenuPrimitive.CheckboxItem.displayName;[m
[31m-[m
[31m-const DropdownMenuRadioItem = React.forwardRef<[m
[31m-  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,[m
[31m-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>[m
[31m->(({ className, children, ...props }, ref) => ([m
[31m-  <DropdownMenuPrimitive.RadioItem[m
[31m-    ref={ref}[m
[31m-    className={cn([m
[31m-      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm font-medium outline-none focus:bg-slate-100 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-slate-700',[m
[31m-      className[m
[31m-    )}[m
[31m-    {...props}[m
[31m-  >[m
[31m-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">[m
[31m-      <DropdownMenuPrimitive.ItemIndicator>[m
[31m-        <Circle className="h-2 w-2 fill-current" />[m
[31m-      </DropdownMenuPrimitive.ItemIndicator>[m
[31m-    </span>[m
[31m-    {children}[m
[31m-  </DropdownMenuPrimitive.RadioItem>[m
[31m-));[m
[31m-DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;[m
[31m-[m
[31m-const DropdownMenuLabel = React.forwardRef<[m
[31m-  React.ElementRef<typeof DropdownMenuPrimitive.Label>,[m
[31m-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {[m
[31m-    inset?: boolean;[m
[31m-  }[m
[31m->(({ className, inset, ...props }, ref) => ([m
[31m-  <DropdownMenuPrimitive.Label[m
[31m-    ref={ref}[m
[31m-    className={cn([m
[31m-      'px-2 py-1.5 text-sm font-semibold text-slate-900 dark:text-slate-300',[m
[31m-      inset && 'pl-8',[m
[31m-      className[m
[31m-    )}[m
[31m-    {...props}[m
[31m-  />[m
[31m-));[m
[31m-DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;[m
[31m-[m
[31m-const DropdownMenuSeparator = React.forwardRef<[m
[31m-  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,[m
[31m-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>[m
[31m->(({ className, ...props }, ref) => ([m
[31m-  <DropdownMenuPrimitive.Separator[m
[31m-    ref={ref}[m
[31m-    className={cn('-mx-1 my-1 h-px bg-slate-100 dark:bg-slate-700', className)}[m
[31m-    {...props}[m
[31m-  />[m
[31m-));[m
[31m-DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;[m
[31m-[m
[31m-const DropdownMenuShortcut = ({[m
[31m-  className,[m
[31m-  ...props[m
[31m-}: React.HTMLAttributes<HTMLSpanElement>) => {[m
[31m-  return ([m
[31m-    <span[m
[31m-      className={cn([m
[31m-        'ml-auto text-xs tracking-widest text-slate-500',[m
[31m-        className[m
[31m-      )}[m
[31m-      {...props}[m
[31m-    />[m
[31m-  );[m
[31m-};[m
[31m-DropdownMenuShortcut.displayName = 'DropdownMenuShortcut';[m
[31m-[m
[31m-export {[m
[31m-  DropdownMenu,[m
[31m-  DropdownMenuTrigger,[m
[31m-  DropdownMenuContent,[m
[31m-  DropdownMenuItem,[m
[31m-  DropdownMenuCheckboxItem,[m
[31m-  DropdownMenuRadioItem,[m
[31m-  DropdownMenuLabel,[m
[31m-  DropdownMenuSeparator,[m
[31m-  DropdownMenuShortcut,[m
[31m-  DropdownMenuGroup,[m
[31m-  DropdownMenuPortal,[m
[31m-  DropdownMenuSub,[m
[31m-  DropdownMenuSubContent,[m
[31m-  DropdownMenuSubTrigger,[m
[31m-  DropdownMenuRadioGroup,[m
[31m-};[m
